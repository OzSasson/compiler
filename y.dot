digraph y {
	edge [fontsize=10];
	node [shape=box,fontsize=10];
	orientation=landscape;
	rankdir=LR;
	/*
	margin=0.2;
	page="8.27,11.69"; // for A4 printing
	ratio=auto;
	*/

	q0 [label="0:\l  $accept -> . program $end\l  program -> . declaration_list\l  program -> . statement_list\l  declaration_list -> . declaration\l  declaration_list -> . declaration_list declaration\l  declaration -> . type_specifier ID SEMICOLON\l  type_specifier -> . INT\l  type_specifier -> . DOUBLE\l  type_specifier -> . CHAR\l  type_specifier -> . STRING\l  type_specifier -> . BOOL\l  statement_list -> . statement\l  statement_list -> . statement_list statement\l  statement -> . print_statement\l  statement -> . exit_statement\l  statement -> . if_statement\l  statement -> . while_statement\l  statement -> . assignment_statement\l  statement -> . expression_statement\l  print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON\l  exit_statement -> . EXIT SEMICOLON\l  if_statement -> . IF LPAREN expression RPAREN statement\l  if_statement -> . IF LPAREN expression RPAREN statement ELSE statement\l  while_statement -> . WHILE LPAREN expression RPAREN statement\l  assignment_statement -> . ID ASSIGN expression SEMICOLON\l  expression_statement -> . expression SEMICOLON\l  expression -> . term\l  expression -> . expression ADD term\l  expression -> . expression SUB term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q1 [label="1:\l  type_specifier -> INT . { ID }\l"];
	q2 [label="2:\l  type_specifier -> DOUBLE . { ID }\l"];
	q3 [label="3:\l  type_specifier -> CHAR . { ID }\l"];
	q4 [label="4:\l  type_specifier -> STRING . { ID }\l"];
	q5 [label="5:\l  type_specifier -> BOOL . { ID }\l"];
	q6 [label="6:\l  print_statement -> PRINT . LPAREN expression RPAREN SEMICOLON\l"];
	q7 [label="7:\l  exit_statement -> EXIT . SEMICOLON\l"];
	q8 [label="8:\l  if_statement -> IF . LPAREN expression RPAREN statement\l  if_statement -> IF . LPAREN expression RPAREN statement ELSE statement\l"];
	q9 [label="9:\l  while_statement -> WHILE . LPAREN expression RPAREN statement\l"];
	q10 [label="10:\l  expression -> . term\l  expression -> . expression ADD term\l  expression -> . expression SUB term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l  factor -> LPAREN . expression RPAREN\l"];
	q11 [label="11:\l  assignment_statement -> ID . ASSIGN expression SEMICOLON\l  factor -> ID . { SEMICOLON MOD DIV MUL SUB ADD }\l"];
	q12 [label="12:\l  factor -> INTEGER . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q13 [label="13:\l  factor -> DOUBLENUM . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q14 [label="14:\l  factor -> CHARLIT . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q15 [label="15:\l  factor -> STRINGLIT . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q16 [label="16:\l  factor -> BOOLOP . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q17 [label="17:\l  $accept -> program . $end\l"];
	q18 [label="18:\l  program -> declaration_list . { $end }\l  declaration_list -> declaration_list . declaration\l  declaration -> . type_specifier ID SEMICOLON\l  type_specifier -> . INT\l  type_specifier -> . DOUBLE\l  type_specifier -> . CHAR\l  type_specifier -> . STRING\l  type_specifier -> . BOOL\l"];
	q19 [label="19:\l  program -> statement_list . { $end }\l  statement_list -> statement_list . statement\l  statement -> . print_statement\l  statement -> . exit_statement\l  statement -> . if_statement\l  statement -> . while_statement\l  statement -> . assignment_statement\l  statement -> . expression_statement\l  print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON\l  exit_statement -> . EXIT SEMICOLON\l  if_statement -> . IF LPAREN expression RPAREN statement\l  if_statement -> . IF LPAREN expression RPAREN statement ELSE statement\l  while_statement -> . WHILE LPAREN expression RPAREN statement\l  assignment_statement -> . ID ASSIGN expression SEMICOLON\l  expression_statement -> . expression SEMICOLON\l  expression -> . term\l  expression -> . expression ADD term\l  expression -> . expression SUB term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q20 [label="20:\l  declaration_list -> declaration . { BOOL STRING CHAR DOUBLE INT $end }\l"];
	q21 [label="21:\l  declaration -> type_specifier . ID SEMICOLON\l"];
	q22 [label="22:\l  statement_list -> statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE IF EXIT PRINT $end }\l"];
	q23 [label="23:\l  statement -> print_statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q24 [label="24:\l  statement -> exit_statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q25 [label="25:\l  statement -> if_statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q26 [label="26:\l  statement -> while_statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q27 [label="27:\l  statement -> assignment_statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q28 [label="28:\l  statement -> expression_statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q29 [label="29:\l  expression_statement -> expression . SEMICOLON\l  expression -> expression . ADD term\l  expression -> expression . SUB term\l"];
	q30 [label="30:\l  expression -> term . { SEMICOLON RPAREN SUB ADD }\l  term -> term . MUL factor\l  term -> term . DIV factor\l  term -> term . MOD factor\l"];
	q31 [label="31:\l  term -> factor . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q32 [label="32:\l  print_statement -> PRINT LPAREN . expression RPAREN SEMICOLON\l  expression -> . term\l  expression -> . expression ADD term\l  expression -> . expression SUB term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q33 [label="33:\l  exit_statement -> EXIT SEMICOLON . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q34 [label="34:\l  if_statement -> IF LPAREN . expression RPAREN statement\l  if_statement -> IF LPAREN . expression RPAREN statement ELSE statement\l  expression -> . term\l  expression -> . expression ADD term\l  expression -> . expression SUB term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q35 [label="35:\l  while_statement -> WHILE LPAREN . expression RPAREN statement\l  expression -> . term\l  expression -> . expression ADD term\l  expression -> . expression SUB term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q36 [label="36:\l  factor -> ID . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q37 [label="37:\l  expression -> expression . ADD term\l  expression -> expression . SUB term\l  factor -> LPAREN expression . RPAREN\l"];
	q38 [label="38:\l  assignment_statement -> ID ASSIGN . expression SEMICOLON\l  expression -> . term\l  expression -> . expression ADD term\l  expression -> . expression SUB term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q39 [label="39:\l  declaration_list -> declaration_list declaration . { BOOL STRING CHAR DOUBLE INT $end }\l"];
	q40 [label="40:\l  statement_list -> statement_list statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE IF EXIT PRINT $end }\l"];
	q41 [label="41:\l  declaration -> type_specifier ID . SEMICOLON\l"];
	q42 [label="42:\l  expression -> expression ADD . term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q43 [label="43:\l  expression -> expression SUB . term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q44 [label="44:\l  expression_statement -> expression SEMICOLON . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q45 [label="45:\l  term -> term MUL . factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q46 [label="46:\l  term -> term DIV . factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q47 [label="47:\l  term -> term MOD . factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q48 [label="48:\l  print_statement -> PRINT LPAREN expression . RPAREN SEMICOLON\l  expression -> expression . ADD term\l  expression -> expression . SUB term\l"];
	q49 [label="49:\l  if_statement -> IF LPAREN expression . RPAREN statement\l  if_statement -> IF LPAREN expression . RPAREN statement ELSE statement\l  expression -> expression . ADD term\l  expression -> expression . SUB term\l"];
	q50 [label="50:\l  while_statement -> WHILE LPAREN expression . RPAREN statement\l  expression -> expression . ADD term\l  expression -> expression . SUB term\l"];
	q51 [label="51:\l  factor -> LPAREN expression RPAREN . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q52 [label="52:\l  assignment_statement -> ID ASSIGN expression . SEMICOLON\l  expression -> expression . ADD term\l  expression -> expression . SUB term\l"];
	q53 [label="53:\l  declaration -> type_specifier ID SEMICOLON . { BOOL STRING CHAR DOUBLE INT $end }\l"];
	q54 [label="54:\l  expression -> expression ADD term . { SEMICOLON RPAREN SUB ADD }\l  term -> term . MUL factor\l  term -> term . DIV factor\l  term -> term . MOD factor\l"];
	q55 [label="55:\l  expression -> expression SUB term . { SEMICOLON RPAREN SUB ADD }\l  term -> term . MUL factor\l  term -> term . DIV factor\l  term -> term . MOD factor\l"];
	q56 [label="56:\l  term -> term MUL factor . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q57 [label="57:\l  term -> term DIV factor . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q58 [label="58:\l  term -> term MOD factor . { SEMICOLON RPAREN MOD DIV MUL SUB ADD }\l"];
	q59 [label="59:\l  print_statement -> PRINT LPAREN expression RPAREN . SEMICOLON\l"];
	q60 [label="60:\l  statement -> . print_statement\l  statement -> . exit_statement\l  statement -> . if_statement\l  statement -> . while_statement\l  statement -> . assignment_statement\l  statement -> . expression_statement\l  print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON\l  exit_statement -> . EXIT SEMICOLON\l  if_statement -> . IF LPAREN expression RPAREN statement\l  if_statement -> IF LPAREN expression RPAREN . statement\l  if_statement -> . IF LPAREN expression RPAREN statement ELSE statement\l  if_statement -> IF LPAREN expression RPAREN . statement ELSE statement\l  while_statement -> . WHILE LPAREN expression RPAREN statement\l  assignment_statement -> . ID ASSIGN expression SEMICOLON\l  expression_statement -> . expression SEMICOLON\l  expression -> . term\l  expression -> . expression ADD term\l  expression -> . expression SUB term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q61 [label="61:\l  statement -> . print_statement\l  statement -> . exit_statement\l  statement -> . if_statement\l  statement -> . while_statement\l  statement -> . assignment_statement\l  statement -> . expression_statement\l  print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON\l  exit_statement -> . EXIT SEMICOLON\l  if_statement -> . IF LPAREN expression RPAREN statement\l  if_statement -> . IF LPAREN expression RPAREN statement ELSE statement\l  while_statement -> . WHILE LPAREN expression RPAREN statement\l  while_statement -> WHILE LPAREN expression RPAREN . statement\l  assignment_statement -> . ID ASSIGN expression SEMICOLON\l  expression_statement -> . expression SEMICOLON\l  expression -> . term\l  expression -> . expression ADD term\l  expression -> . expression SUB term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q62 [label="62:\l  assignment_statement -> ID ASSIGN expression SEMICOLON . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q63 [label="63:\l  print_statement -> PRINT LPAREN expression RPAREN SEMICOLON . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q64 [label="64:\l  if_statement -> IF LPAREN expression RPAREN statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l  if_statement -> IF LPAREN expression RPAREN statement . ELSE statement\l"];
	q65 [label="65:\l  while_statement -> WHILE LPAREN expression RPAREN statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];
	q66 [label="66:\l  statement -> . print_statement\l  statement -> . exit_statement\l  statement -> . if_statement\l  statement -> . while_statement\l  statement -> . assignment_statement\l  statement -> . expression_statement\l  print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON\l  exit_statement -> . EXIT SEMICOLON\l  if_statement -> . IF LPAREN expression RPAREN statement\l  if_statement -> . IF LPAREN expression RPAREN statement ELSE statement\l  if_statement -> IF LPAREN expression RPAREN statement ELSE . statement\l  while_statement -> . WHILE LPAREN expression RPAREN statement\l  assignment_statement -> . ID ASSIGN expression SEMICOLON\l  expression_statement -> . expression SEMICOLON\l  expression -> . term\l  expression -> . expression ADD term\l  expression -> . expression SUB term\l  term -> . factor\l  term -> . term MUL factor\l  term -> . term DIV factor\l  term -> . term MOD factor\l  factor -> . ID\l  factor -> . INTEGER\l  factor -> . DOUBLENUM\l  factor -> . CHARLIT\l  factor -> . STRINGLIT\l  factor -> . BOOLOP\l  factor -> . LPAREN expression RPAREN\l"];
	q67 [label="67:\l  if_statement -> IF LPAREN expression RPAREN statement ELSE statement . { BOOLOP STRINGLIT CHARLIT DOUBLENUM INTEGER ID LPAREN WHILE ELSE IF EXIT PRINT $end }\l"];

	q0 -> q1 [label="INT"];
	q0 -> q2 [label="DOUBLE"];
	q0 -> q3 [label="CHAR"];
	q0 -> q4 [label="STRING"];
	q0 -> q5 [label="BOOL"];
	q0 -> q6 [label="PRINT"];
	q0 -> q7 [label="EXIT"];
	q0 -> q8 [label="IF"];
	q0 -> q9 [label="WHILE"];
	q0 -> q10 [label="LPAREN"];
	q0 -> q11 [label="ID"];
	q0 -> q12 [label="INTEGER"];
	q0 -> q13 [label="DOUBLENUM"];
	q0 -> q14 [label="CHARLIT"];
	q0 -> q15 [label="STRINGLIT"];
	q0 -> q16 [label="BOOLOP"];
	q0 -> q17 [label="program"];
	q0 -> q18 [label="declaration_list"];
	q0 -> q19 [label="statement_list"];
	q0 -> q20 [label="declaration"];
	q0 -> q21 [label="type_specifier"];
	q0 -> q22 [label="statement"];
	q0 -> q23 [label="print_statement"];
	q0 -> q24 [label="exit_statement"];
	q0 -> q25 [label="if_statement"];
	q0 -> q26 [label="while_statement"];
	q0 -> q27 [label="assignment_statement"];
	q0 -> q28 [label="expression_statement"];
	q0 -> q29 [label="expression"];
	q0 -> q30 [label="term"];
	q0 -> q31 [label="factor"];
	q6 -> q32 [label="LPAREN"];
	q7 -> q33 [label="SEMICOLON"];
	q8 -> q34 [label="LPAREN"];
	q9 -> q35 [label="LPAREN"];
	q10 -> q10 [label="LPAREN"];
	q10 -> q36 [label="ID"];
	q10 -> q12 [label="INTEGER"];
	q10 -> q13 [label="DOUBLENUM"];
	q10 -> q14 [label="CHARLIT"];
	q10 -> q15 [label="STRINGLIT"];
	q10 -> q16 [label="BOOLOP"];
	q10 -> q37 [label="expression"];
	q10 -> q30 [label="term"];
	q10 -> q31 [label="factor"];
	q11 -> q38 [label="ASSIGN"];
	q18 -> q1 [label="INT"];
	q18 -> q2 [label="DOUBLE"];
	q18 -> q3 [label="CHAR"];
	q18 -> q4 [label="STRING"];
	q18 -> q5 [label="BOOL"];
	q18 -> q39 [label="declaration"];
	q18 -> q21 [label="type_specifier"];
	q19 -> q6 [label="PRINT"];
	q19 -> q7 [label="EXIT"];
	q19 -> q8 [label="IF"];
	q19 -> q9 [label="WHILE"];
	q19 -> q10 [label="LPAREN"];
	q19 -> q11 [label="ID"];
	q19 -> q12 [label="INTEGER"];
	q19 -> q13 [label="DOUBLENUM"];
	q19 -> q14 [label="CHARLIT"];
	q19 -> q15 [label="STRINGLIT"];
	q19 -> q16 [label="BOOLOP"];
	q19 -> q40 [label="statement"];
	q19 -> q23 [label="print_statement"];
	q19 -> q24 [label="exit_statement"];
	q19 -> q25 [label="if_statement"];
	q19 -> q26 [label="while_statement"];
	q19 -> q27 [label="assignment_statement"];
	q19 -> q28 [label="expression_statement"];
	q19 -> q29 [label="expression"];
	q19 -> q30 [label="term"];
	q19 -> q31 [label="factor"];
	q21 -> q41 [label="ID"];
	q29 -> q42 [label="ADD"];
	q29 -> q43 [label="SUB"];
	q29 -> q44 [label="SEMICOLON"];
	q30 -> q45 [label="MUL"];
	q30 -> q46 [label="DIV"];
	q30 -> q47 [label="MOD"];
	q32 -> q10 [label="LPAREN"];
	q32 -> q36 [label="ID"];
	q32 -> q12 [label="INTEGER"];
	q32 -> q13 [label="DOUBLENUM"];
	q32 -> q14 [label="CHARLIT"];
	q32 -> q15 [label="STRINGLIT"];
	q32 -> q16 [label="BOOLOP"];
	q32 -> q48 [label="expression"];
	q32 -> q30 [label="term"];
	q32 -> q31 [label="factor"];
	q34 -> q10 [label="LPAREN"];
	q34 -> q36 [label="ID"];
	q34 -> q12 [label="INTEGER"];
	q34 -> q13 [label="DOUBLENUM"];
	q34 -> q14 [label="CHARLIT"];
	q34 -> q15 [label="STRINGLIT"];
	q34 -> q16 [label="BOOLOP"];
	q34 -> q49 [label="expression"];
	q34 -> q30 [label="term"];
	q34 -> q31 [label="factor"];
	q35 -> q10 [label="LPAREN"];
	q35 -> q36 [label="ID"];
	q35 -> q12 [label="INTEGER"];
	q35 -> q13 [label="DOUBLENUM"];
	q35 -> q14 [label="CHARLIT"];
	q35 -> q15 [label="STRINGLIT"];
	q35 -> q16 [label="BOOLOP"];
	q35 -> q50 [label="expression"];
	q35 -> q30 [label="term"];
	q35 -> q31 [label="factor"];
	q37 -> q42 [label="ADD"];
	q37 -> q43 [label="SUB"];
	q37 -> q51 [label="RPAREN"];
	q38 -> q10 [label="LPAREN"];
	q38 -> q36 [label="ID"];
	q38 -> q12 [label="INTEGER"];
	q38 -> q13 [label="DOUBLENUM"];
	q38 -> q14 [label="CHARLIT"];
	q38 -> q15 [label="STRINGLIT"];
	q38 -> q16 [label="BOOLOP"];
	q38 -> q52 [label="expression"];
	q38 -> q30 [label="term"];
	q38 -> q31 [label="factor"];
	q41 -> q53 [label="SEMICOLON"];
	q42 -> q10 [label="LPAREN"];
	q42 -> q36 [label="ID"];
	q42 -> q12 [label="INTEGER"];
	q42 -> q13 [label="DOUBLENUM"];
	q42 -> q14 [label="CHARLIT"];
	q42 -> q15 [label="STRINGLIT"];
	q42 -> q16 [label="BOOLOP"];
	q42 -> q54 [label="term"];
	q42 -> q31 [label="factor"];
	q43 -> q10 [label="LPAREN"];
	q43 -> q36 [label="ID"];
	q43 -> q12 [label="INTEGER"];
	q43 -> q13 [label="DOUBLENUM"];
	q43 -> q14 [label="CHARLIT"];
	q43 -> q15 [label="STRINGLIT"];
	q43 -> q16 [label="BOOLOP"];
	q43 -> q55 [label="term"];
	q43 -> q31 [label="factor"];
	q45 -> q10 [label="LPAREN"];
	q45 -> q36 [label="ID"];
	q45 -> q12 [label="INTEGER"];
	q45 -> q13 [label="DOUBLENUM"];
	q45 -> q14 [label="CHARLIT"];
	q45 -> q15 [label="STRINGLIT"];
	q45 -> q16 [label="BOOLOP"];
	q45 -> q56 [label="factor"];
	q46 -> q10 [label="LPAREN"];
	q46 -> q36 [label="ID"];
	q46 -> q12 [label="INTEGER"];
	q46 -> q13 [label="DOUBLENUM"];
	q46 -> q14 [label="CHARLIT"];
	q46 -> q15 [label="STRINGLIT"];
	q46 -> q16 [label="BOOLOP"];
	q46 -> q57 [label="factor"];
	q47 -> q10 [label="LPAREN"];
	q47 -> q36 [label="ID"];
	q47 -> q12 [label="INTEGER"];
	q47 -> q13 [label="DOUBLENUM"];
	q47 -> q14 [label="CHARLIT"];
	q47 -> q15 [label="STRINGLIT"];
	q47 -> q16 [label="BOOLOP"];
	q47 -> q58 [label="factor"];
	q48 -> q42 [label="ADD"];
	q48 -> q43 [label="SUB"];
	q48 -> q59 [label="RPAREN"];
	q49 -> q42 [label="ADD"];
	q49 -> q43 [label="SUB"];
	q49 -> q60 [label="RPAREN"];
	q50 -> q42 [label="ADD"];
	q50 -> q43 [label="SUB"];
	q50 -> q61 [label="RPAREN"];
	q52 -> q42 [label="ADD"];
	q52 -> q43 [label="SUB"];
	q52 -> q62 [label="SEMICOLON"];
	q54 -> q45 [label="MUL"];
	q54 -> q46 [label="DIV"];
	q54 -> q47 [label="MOD"];
	q55 -> q45 [label="MUL"];
	q55 -> q46 [label="DIV"];
	q55 -> q47 [label="MOD"];
	q59 -> q63 [label="SEMICOLON"];
	q60 -> q6 [label="PRINT"];
	q60 -> q7 [label="EXIT"];
	q60 -> q8 [label="IF"];
	q60 -> q9 [label="WHILE"];
	q60 -> q10 [label="LPAREN"];
	q60 -> q11 [label="ID"];
	q60 -> q12 [label="INTEGER"];
	q60 -> q13 [label="DOUBLENUM"];
	q60 -> q14 [label="CHARLIT"];
	q60 -> q15 [label="STRINGLIT"];
	q60 -> q16 [label="BOOLOP"];
	q60 -> q64 [label="statement"];
	q60 -> q23 [label="print_statement"];
	q60 -> q24 [label="exit_statement"];
	q60 -> q25 [label="if_statement"];
	q60 -> q26 [label="while_statement"];
	q60 -> q27 [label="assignment_statement"];
	q60 -> q28 [label="expression_statement"];
	q60 -> q29 [label="expression"];
	q60 -> q30 [label="term"];
	q60 -> q31 [label="factor"];
	q61 -> q6 [label="PRINT"];
	q61 -> q7 [label="EXIT"];
	q61 -> q8 [label="IF"];
	q61 -> q9 [label="WHILE"];
	q61 -> q10 [label="LPAREN"];
	q61 -> q11 [label="ID"];
	q61 -> q12 [label="INTEGER"];
	q61 -> q13 [label="DOUBLENUM"];
	q61 -> q14 [label="CHARLIT"];
	q61 -> q15 [label="STRINGLIT"];
	q61 -> q16 [label="BOOLOP"];
	q61 -> q65 [label="statement"];
	q61 -> q23 [label="print_statement"];
	q61 -> q24 [label="exit_statement"];
	q61 -> q25 [label="if_statement"];
	q61 -> q26 [label="while_statement"];
	q61 -> q27 [label="assignment_statement"];
	q61 -> q28 [label="expression_statement"];
	q61 -> q29 [label="expression"];
	q61 -> q30 [label="term"];
	q61 -> q31 [label="factor"];
	q64 -> q66 [label="ELSE"];
	q66 -> q6 [label="PRINT"];
	q66 -> q7 [label="EXIT"];
	q66 -> q8 [label="IF"];
	q66 -> q9 [label="WHILE"];
	q66 -> q10 [label="LPAREN"];
	q66 -> q11 [label="ID"];
	q66 -> q12 [label="INTEGER"];
	q66 -> q13 [label="DOUBLENUM"];
	q66 -> q14 [label="CHARLIT"];
	q66 -> q15 [label="STRINGLIT"];
	q66 -> q16 [label="BOOLOP"];
	q66 -> q67 [label="statement"];
	q66 -> q23 [label="print_statement"];
	q66 -> q24 [label="exit_statement"];
	q66 -> q25 [label="if_statement"];
	q66 -> q26 [label="while_statement"];
	q66 -> q27 [label="assignment_statement"];
	q66 -> q28 [label="expression_statement"];
	q66 -> q29 [label="expression"];
	q66 -> q30 [label="term"];
	q66 -> q31 [label="factor"];
}
